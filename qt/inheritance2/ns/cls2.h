/* This class framework is generated by Core Frame Builder. */
/* For more information, refer to http://www.one-lab.net/ */

/* Data Handling Class */
#ifndef _CLS2_H_
#define _CLS2_H_

#include "config.h"
#include "ns/cls.h"
#include "ife.h"
namespace ns {
	class cls2 : public ns::cls, ns::ife {
		friend class cls2List;

			rw_field(int, PInt)

		public:
			virtual int Fx1(bool* aArg, int* aReturn);
		public:
			static int field_count();
		protected:
			int input_field(const QString& key, const QVariant& value, bool _set_value) override;
		private:
			int validate_field(const QString& key, const QVariant& value);
			int validate_field(int index, const QVariant& value);
			int input_field(int index, const QVariant& value, bool _set_value);
		public:
			int to_json(QString& output) override;
			int from_json(const QString& output);
			int from_json(const QMap<QString, QVariant>& map);
			int to_xml(QString& output, const QString& rowTag) override;
			int to_sv(QString& output, const QString& spliter) override;
			int from_xml(const QDomElement& element, QHash<QString, QString>& values);
			int from_xml(const QString& input, const QString& rowTag);
			int from_sv(const QString& input, const QString& spliter);
		protected:
			inline bool compare_to(cls2& aValue) const;
		public:
			inline void clone_from(cls2& aValue);
			inline bool operator==(cls2 &aValue) const { return compare_to(aValue); }
			inline bool operator!=(cls2 &aValue) const { return !compare_to(aValue); }
			#ifdef _MSC_VER
				inline void operator=(cls2 &aValue) { clone_from(aValue); }
			#endif
		public:
			~cls2();
			cls2();
			cls2(const int& aPInt);
		public:
			void _invoke_(const QString& entry, const QString& input, QString& output);
	};//class cls2
	class cls2List {
		private:
			inline bool compare_to(cls2List& aValue) const;
		public:
			QList<cls2> Items;
			inline bool operator==(cls2List& aValue) const { return compare_to(aValue); }
			inline bool operator!=(cls2List& aValue) const { return !compare_to(aValue); }
			int to_json(QString& output, const QString& tag = "cls2");
			int from_json(const QString& input, const QString& tag = "cls2");
			int to_xml(QString& output, const QString& rowTag, const QString& tableTag);
			int from_xml(const QString& input, const QString& rowTag, const QString& tableTag);
			int to_sv(QString& output, const QString& spliter);
			int from_sv(const QString& input, const QString& spliter);
	};//class cls2List
}//namespace ns

#endif