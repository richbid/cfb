/* This class framework is generated by Core Frame Builder. */
/* For more information, refer to http://www.one-lab.net/ */

/* Data Handling Class */
#include "cls.h"
inline bool qtns::cls::compare_to(cls& aValue) const {
	if (mPBool != aValue.getPBool()) return false;
	if (mPBytes != aValue.getPBytes()) return false;
	if (mPDate != aValue.getPDate()) return false;
	if (mPDateTime != aValue.getPDateTime()) return false;
	if (mPDouble != aValue.getPDouble()) return false;
	if (mPFloat != aValue.getPFloat()) return false;
	if (mPInt32 != aValue.getPInt32()) return false;
	if (mPText != aValue.getPText()) return false;
	if (mPTime != aValue.getPTime()) return false;
	if (mPUInt32 != aValue.getPUInt32()) return false;
	return true;
}

inline void qtns::cls::clone_from(cls& aValue) {
	setPBool(aValue.getPBool());
	setPBytes(aValue.getPBytes());
	setPDate(aValue.getPDate());
	setPDateTime(aValue.getPDateTime());
	setPDouble(aValue.getPDouble());
	setPFloat(aValue.getPFloat());
	setPInt32(aValue.getPInt32());
	setPText(aValue.getPText());
	setPTime(aValue.getPTime());
	setPUInt32(aValue.getPUInt32());
}

qtns::cls::~cls() {
}

qtns::cls::cls() {
	mPBool = false;
	mPDouble = 0.0;
	mPFloat = 0.0f;
	mPInt32 = 0;
	mPUInt32 = 0u;
}

qtns::cls::cls(const bool& aPBool, const onelab::Bytes& aPBytes, const QDate& aPDate, const QDateTime& aPDateTime, const double& aPDouble, const float& aPFloat, const int& aPInt32, const QString& aPText, const QTime& aPTime, const unsigned int& aPUInt32){
	setPBool(aPBool);
	setPBytes(aPBytes);
	setPDate(aPDate);
	setPDateTime(aPDateTime);
	setPDouble(aPDouble);
	setPFloat(aPFloat);
	setPInt32(aPInt32);
	setPText(aPText);
	setPTime(aPTime);
	setPUInt32(aPUInt32);
}

void qtns::cls::_invoke_(const QString& entry, const QString& input, QString& output) {
	if (false){}
}